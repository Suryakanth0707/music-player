

import java.sql.*;
import jaco.mp3.player.MP3Player;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.*;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rohan
 */
public class MusiicPlayer extends javax.swing.JFrame {

    /**
     * Creates new form MusiicPlayer
     */
    public MusiicPlayer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame2 = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        songadd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pathfield = new javax.swing.JTextField();
        namefield = new javax.swing.JTextField();
        artistfield = new javax.swing.JTextField();
        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        stopSong = new javax.swing.JButton();
        playSong = new javax.swing.JButton();
        previousSong = new javax.swing.JButton();
        nextSong = new javax.swing.JButton();
        pauseSong = new javax.swing.JButton();
        recentSong = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        searchBox = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        displayName = new javax.swing.JLabel();
        displayArtist = new javax.swing.JLabel();
        chooseSong = new javax.swing.JButton();
        Queue = new javax.swing.JButton();
        displaySongs = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        addsong = new javax.swing.JButton();
        loader = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ToPlayer = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jFrame2.setTitle("secondframe");

        jPanel2.setBackground(new java.awt.Color(153, 0, 153));

        songadd.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        songadd.setText("Submit");
        songadd.setBorder(new javax.swing.border.MatteBorder(null));
        songadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songaddActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter Path");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Name");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Enter Artist");

        pathfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathfieldActionPerformed(evt);
            }
        });

        artistfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistfieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(songadd, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pathfield)
                        .addComponent(namefield)
                        .addComponent(artistfield, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artistfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(38, 38, 38)
                .addComponent(songadd)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        stopSong.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        stopSong.setForeground(new java.awt.Color(255, 255, 255));
        stopSong.setText("Stop");
        stopSong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        stopSong.setContentAreaFilled(false);
        stopSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopSongActionPerformed(evt);
            }
        });

        playSong.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        playSong.setForeground(new java.awt.Color(255, 255, 255));
        playSong.setText("Play");
        playSong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        playSong.setContentAreaFilled(false);
        playSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playSongActionPerformed(evt);
            }
        });

        previousSong.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        previousSong.setForeground(new java.awt.Color(255, 255, 255));
        previousSong.setText("Prev");
        previousSong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        previousSong.setContentAreaFilled(false);
        previousSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousSongActionPerformed(evt);
            }
        });

        nextSong.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        nextSong.setForeground(new java.awt.Color(255, 255, 255));
        nextSong.setText("Next");
        nextSong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        nextSong.setContentAreaFilled(false);
        nextSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextSongActionPerformed(evt);
            }
        });

        pauseSong.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        pauseSong.setForeground(new java.awt.Color(255, 255, 255));
        pauseSong.setText("Pause");
        pauseSong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        pauseSong.setContentAreaFilled(false);
        pauseSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseSongActionPerformed(evt);
            }
        });

        recentSong.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        recentSong.setForeground(new java.awt.Color(255, 255, 255));
        recentSong.setText("Last Played");
        recentSong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        recentSong.setContentAreaFilled(false);
        recentSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recentSongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(stopSong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previousSong)
                .addGap(60, 60, 60)
                .addComponent(playSong, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pauseSong)
                .addGap(42, 42, 42)
                .addComponent(nextSong, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recentSong)
                .addGap(145, 145, 145))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousSong)
                    .addComponent(stopSong)
                    .addComponent(playSong)
                    .addComponent(pauseSong)
                    .addComponent(recentSong)
                    .addComponent(nextSong))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 0, 153));
        jPanel4.setForeground(new java.awt.Color(153, 0, 153));

        jLabel6.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Search for your favourite song");

        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(19, 19, 19))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jLabel6))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        displayName.setFont(new java.awt.Font("Lucida Calligraphy", 3, 14)); // NOI18N
        displayName.setText("Song Name");

        displayArtist.setFont(new java.awt.Font("Lucida Calligraphy", 3, 14)); // NOI18N
        displayArtist.setText("Artist");

        chooseSong.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        chooseSong.setText("Select");
        chooseSong.setBorder(new javax.swing.border.MatteBorder(null));
        chooseSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSongActionPerformed(evt);
            }
        });

        Queue.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Queue.setText("Queue");
        Queue.setBorder(new javax.swing.border.MatteBorder(null));
        Queue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(displayArtist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(displayName, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseSong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Queue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(169, 169, 169))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayName, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseSong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Queue))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("firstframe");
        setBackground(new java.awt.Color(51, 51, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jPanel3.setBackground(new java.awt.Color(102, 0, 102));

        addsong.setOpaque(false);
        addsong.setContentAreaFilled(false);
        addsong.setBorderPainted(false);
        addsong.setBackground(new java.awt.Color(0,0,255);
            addsong.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
            addsong.setForeground(new java.awt.Color(255, 255, 255));
            addsong.setText("Add Song");
            addsong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
            addsong.setContentAreaFilled(false);
            addsong.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            addsong.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addsongActionPerformed(evt);
                }
            });

            loader.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
            loader.setForeground(new java.awt.Color(255, 255, 255));
            loader.setText("Load Songs");
            loader.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
            loader.setContentAreaFilled(false);
            loader.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            loader.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    loaderActionPerformed(evt);
                }
            });

            jButton1.setBackground(new java.awt.Color(255, 255, 255));
            jButton1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
            jButton1.setForeground(new java.awt.Color(255, 255, 255));
            jButton1.setText("Print");
            jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
            jButton1.setContentAreaFilled(false);
            jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            ToPlayer.setBackground(new java.awt.Color(255, 255, 255));
            ToPlayer.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
            ToPlayer.setForeground(new java.awt.Color(255, 255, 255));
            ToPlayer.setText("Music Player");
            ToPlayer.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
            ToPlayer.setContentAreaFilled(false);
            ToPlayer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            ToPlayer.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ToPlayerActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addsong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ToPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(21, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(addsong)
                    .addGap(18, 18, 18)
                    .addComponent(loader)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1)
                    .addGap(18, 18, 18)
                    .addComponent(ToPlayer)
                    .addContainerGap(79, Short.MAX_VALUE))
            );

            jLabel4.setFont(new java.awt.Font("Lucida Calligraphy", 3, 36)); // NOI18N
            jLabel4.setText("MUSIFY");

            jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
            jLabel5.setText("Your Personal PlayList");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addGap(21, 21, 21))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel5)
                    .addGap(109, 109, 109))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents
String filePath1 = "C:\\Users\\Rohan\\Music\\BGMs\\omg_bgm.mp3";
String filePath2 = "C:\\Users\\Rohan\\Music\\BGMs\\Chennai 28.mp3";
String filePat3 = "C:\\Users\\Rohan\\Music\\BGMs\\loosu penne.mp3";
MP3Player mp3 = new MP3Player(new File(filePath1));

static AudioPlayer ap = new AudioPlayer();

    private void addsongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addsongActionPerformed
    jFrame2.setVisible(true);
        
    }//GEN-LAST:event_addsongActionPerformed

    private void songaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songaddActionPerformed
        String path=pathfield.getText();
        String name=namefield.getText();
        String artist=artistfield.getText();
    try {
            Class.forName("com.mysql.cj.jdbc.Driver");
           
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/musicapp?useSSL=false","root","rohan123");
            con.setAutoCommit(false);
            Statement st = con.createStatement();
            String query = "insert into songs"+"(songPath,songName,artist)values"+"(?,?,?);";
            PreparedStatement statement =  con.prepareStatement(query);
            statement.setString(1, path);
            statement.setString(2,name);
            statement.setString(3,artist);
            statement.addBatch();
            statement.executeBatch();
            con.commit();
            con.setAutoCommit(true);
            System.out.print(name+" "+artist);
        } catch (Exception ex) {
            Logger.getLogger(MusiicPlayer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_songaddActionPerformed

    private void pathfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathfieldActionPerformed
       
    }//GEN-LAST:event_pathfieldActionPerformed

    private void artistfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_artistfieldActionPerformed
        
    }//GEN-LAST:event_artistfieldActionPerformed

    private void ToPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToPlayerActionPerformed
    jFrame1.setVisible(true);
    
    }//GEN-LAST:event_ToPlayerActionPerformed

    private void loaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loaderActionPerformed
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
           
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/musicapp","root","rohan123");
            Statement st = con.createStatement();
            String query = "Select * from songs";
            ResultSet rs = st.executeQuery(query);
            while(rs.next()){
                ap.AddSong(rs.getString("songPath"),rs.getString("songName"),rs.getString("artist"),rs.getInt("songId"));
System.out.println(rs.getString("songName"));
            }
        } catch (Exception ex) {
            Logger.getLogger(MusiicPlayer.class.getName()).log(Level.SEVERE, null, ex);
        }
//        
    }//GEN-LAST:event_loaderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            ap.print();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String song = searchBox.getText();
        Node node=ap.SearchSong(song);
        displayName.setText(node.name);
        displayArtist.setText(node.artist);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
jFrame1.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chooseSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSongActionPerformed
        String song = searchBox.getText();
        Node node=ap.SearchSong(song);
        ap.setCurr(node.sno);
    }//GEN-LAST:event_chooseSongActionPerformed

    private void QueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueueActionPerformed
        String song = searchBox.getText();
        Node node=ap.SearchSong(song);
        System.out.println("Searched"+song);
        ap.InsertQueue(node);
    }//GEN-LAST:event_QueueActionPerformed

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void recentSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recentSongActionPerformed

        displayName.setText(ap.Seek().name);
        displayArtist.setText(ap.Seek().artist);
    }//GEN-LAST:event_recentSongActionPerformed

    private void pauseSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseSongActionPerformed
        mp3.pause();
    }//GEN-LAST:event_pauseSongActionPerformed

    private void nextSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextSongActionPerformed
        mp3.stop();
        Node currSong = new Node();
        currSong=ap.selectSong(1);
        mp3.stop();
        filePath1 = currSong.path;
        mp3 = new MP3Player(new File(filePath1));
        mp3.play();
    }//GEN-LAST:event_nextSongActionPerformed

    private void previousSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousSongActionPerformed
        mp3.stop();
        Node currSong = new Node();
        currSong=ap.selectSong(2);
        filePath1 = currSong.path;
        mp3 = new MP3Player(new File(filePath1));
        mp3.play();
    }//GEN-LAST:event_previousSongActionPerformed

    private void playSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playSongActionPerformed
        mp3.stop();
        Node currSong = new Node();
        currSong=ap.selectSong(0);
        filePath1 = currSong.path;
        mp3 = new MP3Player(new File(filePath1));
        mp3.play();
    }//GEN-LAST:event_playSongActionPerformed

    private void stopSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopSongActionPerformed
        mp3.stop();
    }//GEN-LAST:event_stopSongActionPerformed

    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MusiicPlayer().setVisible(true);
            }
        });
    }

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Queue;
    private javax.swing.JButton ToPlayer;
    private javax.swing.JButton addsong;
    public javax.swing.JTextField artistfield;
    public javax.swing.JButton chooseSong;
    public javax.swing.JLabel displayArtist;
    public javax.swing.JLabel displayName;
    private javax.swing.JScrollPane displaySongs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public javax.swing.JFrame jFrame1;
    public javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton loader;
    public javax.swing.JTextField namefield;
    private javax.swing.JButton nextSong;
    public javax.swing.JTextField pathfield;
    private javax.swing.JButton pauseSong;
    private javax.swing.JButton playSong;
    private javax.swing.JButton previousSong;
    private javax.swing.JButton recentSong;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton songadd;
    private javax.swing.JButton stopSong;
    // End of variables declaration//GEN-END:variables
}

class Node{
    String path;
    String name;
    String artist;
    Node next;
    Node prev;
    int sno;
    public Node() {
    }

    public Node(String path, String name, String artist,int sno) {
        this.path = path;
        this.name = name;
        this.artist = artist;
        this.next = null;
        this.prev=null;
        this.sno=sno;
    }
}

class AudioPlayer{
    static Node head;
    static Node tail;
    static Node top;
    static Node curr;  
    static int count=0;

    public AudioPlayer() {
    }
    
    
    
    public void AddSong(String path,String name,String artist,int sno){
        Node newsong = new Node(path,name,artist,sno);
        if(head==null){
            head=newsong;
            tail=newsong;
            curr=head;
            count++;
        }else{
            newsong.prev=tail;
            tail.next=newsong;
            tail=newsong;
            tail.next=head;
            head.prev=tail;
            curr=head;
            count++;
        }
        
    }
    
    public Node RecentlyAdded(){
        Node node=tail;
        return node;
    }
    
    public static void print(){
        Node temp=head;
        int c=0;
        while(c++!=4){
            System.out.print(temp.name);
            temp=temp.next;
        }
    }
    
    
    
    public static Node selectSong(int optn){
        if(optn==0){
            return curr;
        }else if(optn==1){
            curr=curr.next;
        }else if(optn==2){
            curr=curr.prev;
        }
        return curr;
    } 
    
    public static Node Seek(){
        top=curr.prev;
        return top;
    }
    
    public static Node SearchSong(String song){
        String key = song.toLowerCase();
        int c=0;
        int flag=0;
        Node temp=head;
        while(c!=count){
            if(temp.name.equalsIgnoreCase(song)){
                flag=1;
                return temp;
            }else{
                temp=temp.next;
                c++;
            }
        }
        if(flag==0){
            JDialog jd = new JDialog();
            jd.setTitle("Not Found");return null;
        }
        return temp;
    }
    
    public static void setCurr(int sno){
        Node temp=head;
        int c=0;
        int flag=0;
        while(c!=count){
            if(temp.sno==sno){
                flag=1;
                curr=temp;
                return;
            }else{
                temp=temp.next;
                c++;
            }
        }
        if(flag==0){
            JDialog jd = new JDialog();
            jd.setTitle("Not Found");
        }

    }
    
    static Node FetchSong(int sno){
        Node temp=head;
        int c=0;
        int flag=0;
        while(c!=count){
            if(temp.sno==sno){
                flag=1;
                return temp;
            }else{
                temp=temp.next;
                c++;
            }
        }
        if(flag==0){
            JDialog jd = new JDialog();
            jd.setTitle("Not Found");
            return null;
        }
        return temp;
    }
    
    
    //queue
    static ArrayList<Integer> arr=new ArrayList();
    static int front=-1;
    static int rear=-1;
    static void InsertQueue(Node n){
        if(arr.size()==0){
            front=0;
            rear=0;
            arr.add(n.sno);
            RetreieveQueue();
        }else{
            rear++;
            arr.add(n.sno);
            RetreieveQueue();
        }
    }
    
    static void RetreieveQueue(){
        Node temp=head;
        if(front>=0 && arr.get(front)!=0){
            System.out.println();
        int c=0;
        while(c!=count){
            if(temp.sno==arr.get(front)){
                front++;
                System.out.println(temp.name);
                
               temp.prev.next=temp.next;
               
               System.out.println(temp.prev.next.name);
               System.out.println(temp.next.name);
               
               temp.next.prev=temp.prev;
               
                System.out.println();
               System.out.println(temp.next.prev.name);
                System.out.println(temp.prev.name);
               System.out.println(temp.next.name);
               
               curr.next.prev=temp;
               
               System.out.println();
               System.out.println(curr.next.prev.name);
               System.out.println(temp.name);
               
               temp.prev=curr;
               
               System.out.println();
               System.out.println(temp.prev.name);
               System.out.println(curr.name);
               
               temp.next=curr.next;
               curr.next=temp;
               
               System.out.println();
               System.out.println(temp.next.name);
               System.out.println(curr.next.name);
               
               return;
            }else{
                temp=temp.next;
                c++;
            }
        }
        
        }
    }  
}

